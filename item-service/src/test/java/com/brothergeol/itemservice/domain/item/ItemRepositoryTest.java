package com.brothergeol.itemservice.domain.item;import static org.assertj.core.api.Assertions.*;import java.util.List;import org.junit.jupiter.api.AfterEach;import org.junit.jupiter.api.Test;class ItemRepositoryTest {    ItemRepository itemRepository = new ItemRepository();    @AfterEach    void afterEach() {        itemRepository.clearStore();    }    @Test    void save() throws Exception {        // given        Item item = new Item("itemA", 10000, 10);        // when        Item savedItem = itemRepository.save(item);        // then        Item findItem = itemRepository.findById(savedItem.getId());        assertThat(findItem).isEqualTo(savedItem);    }        @Test    void findAll() throws Exception {        // given        Item item1 = new Item("itemA", 10000, 10);        Item item2 = new Item("itemB", 99999, 99);        itemRepository.save(item1);        itemRepository.save(item2);        // when        List<Item> items = itemRepository.findAll();        // then        assertThat(items.size()).isEqualTo(2);        assertThat(items).contains(item1, item2);    }        @Test    void updateItem() throws Exception {        // given        Item item = new Item("itemA", 10000, 10);        Item savedItem = itemRepository.save(item);        Long savedItemId = savedItem.getId();        // when        Item updateParam = new Item("itemB", 99999, 99);        itemRepository.update(savedItemId, updateParam);        // then        Item findItem = itemRepository.findById(savedItemId);        assertThat(findItem.getItemName()).isEqualTo(updateParam.getItemName());        assertThat(findItem.getPrice()).isEqualTo(updateParam.getPrice());        assertThat(findItem.getQuantity()).isEqualTo(updateParam.getQuantity());    }}